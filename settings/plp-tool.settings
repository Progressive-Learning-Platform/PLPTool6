{
  "Resources Path" : "resources/",
  "Ace Path" : "lib/ace/",
  "Languages" : {
    "base path" : "resources/languages/",
    "modes path" : "modes",
    "default path" : "plp/"
  },
  "Application" : {
    "theme base path" : "resources/application/styling/",
    "theme" : "light"
  },
  "Editor" : {
    "font" : "inconsolata",
    "font size" : "14",
    "mode" :"plp",
    "theme" :"tomorrow"
  },
  "Programmer" : {
    "program in chunks" : "true",
    "maximum chunk size" : "2048",
    "timeout milliseconds" : "500",
    "auto detect serial ports" : "true"
  },
  "Simulator" : {
    "speed" : "100",
    "cycles per step" : "1",
    "allow execution of non instruction memory" : "true",
    "assume zero on reads from uninitialized memory" : "true"
  },
  "ErrorMessageSystem" : {
  	"ASSEMBLER_DIRECTIVE_ERROR": {
  		"MISSING_TOKEN_ERROR": {
  			"Description":"This error is caused due to incomplete assembler directive. Instruction is missing some information.",
  			"Links":"http://progressive-learning-platform.github.io/instructions.html#assembler-directives",
  			"Examples":"BEFORE CORRECTION: .word\nAFTER CORRECTION: .word 4\n\nBEFORE CORRECTION: .org\nAFTER CORRECTION:.org 0x12345678"
  		},
  		"INVALID_TOKEN_ERROR": {
  			"Description":"This error is caused due to wrong information provided in the instruction. Here assembler directive was expecting some other value.",
  			"Links":"http://progressive-learning-platform.github.io/instructions.html#assembler-directives",
  			"Examples":"BEFORE CORRECTION: .word main\nAFTER CORRECTION: .word 4\n\nBEFORE CORRECTION: .ascii 45\nAFTER CORRECTION: .ascii \"enter number\""
  		}
  	},
  	"DUPLICATE_LABEL_ERROR": {
  		"DUPLICATE_LABEL_ERROR":{
  			"Description":"This error is caused due to multiple usage of same label. A name once used for label cannot be used to create one more label.",
  			"Links":"http://progressive-learning-platform.github.io/instructions.html#control-flow-operations",
  			"Examples":"BEFORE CORRECTION: main:\naddu $t1, $t2, $t3\nj main\nmain:\nsubu $t1,$t2,$t3\n\nAFTER CORRECTION: main:\naddu $t1, $t2, $t3\nj main\n"
  		}
  	},
  	"INVALID_TOKEN_ERROR":{
  		"INVALID_INSTRUCTION_ERROR":{
  			"Description":"This error is caused due to wrong instruction name. PLP does not have an instruction as mentioned in the code.",
  			"Links":"http://progressive-learning-platform.github.io/instructions.html#operations",
  			"Examples":"BEFORE CORRECTION: sub $t1, $t2, $t3\nAFTER CORRECTION: subu $t1, $t2, $t3\n\nBEFORE CORRECTION: add $t1, $t2, 34\nAFTER CORRECTION: addiu $t1, $t2, 34"
  		},
  		"INVALID_LABEL_ERROR":{
  			"Description":"This error is caused due to missing colon \":\" after label name.",
  			"Links":"http://progressive-learning-platform.github.io/instructions.html#labels",
  			"Examples":"BEFORE CORRECTION: addition\naddu $t1,$t2,$t3\n\nAFTER CORRECTION: addition:\naddu $t1, $t2, $t3"
  		}
  	},
  	"INVALID_LABEL_TARGET_ERROR":{
  		"INVALID_JUMP_TARGET_ERROR":{
  			"Description":"Here the label mentioned in the instruction is not yet defined in the program. Please define the the label before using it in the instruction",
  			"Links":"http://progressive-learning-platform.github.io/instructions.html#unconditional-jump",
  			"Examples":"BEFORE CORRECTION: j add\naddition:\naddu $t1, $t2, $t3\n\nAFTER CORRECTION: j addition\naddition:\naddu $t1,$t2,$t3\n"
  		},
  		"INVALID_BRANCH_TARGET_ERROR":{
  			"Description":"Here the label mentioned in the instruction is not yet defined in the program. Please define the the label before using it in the instruction",
  			"Links":"http://progressive-learning-platform.github.io/instructions.html#conditional-branch",
  			"Examples":"BEFORE CORRECTION: beq $s0, $0, add\naddition:\naddu $t1, $t2, $t3\n\nAFTER CORRECTION: beq $s0, $0, addition\naddition:\naddu $t1,$t2,$t3\n"
  		}
  	},
  	"INVALID_NUMBER_OF_TOKENS_ERROR": {
  		"MISSING_TOKENS_ERROR":{
  			"Description":"This error is caused due to incomplete instruction.",
  			"Links":"http://progressive-learning-platform.github.io/instructions.html#operations",
  			"Examples":""
  		},
  		"EXTRA_TOKENS_ERROR":{
  			"Description":"This error is caused due to extra operands are provided with the instruction.",
  			"Links":"http://progressive-learning-platform.github.io/instructions.html#operations",
  			"Examples":""
  		},
  		"NOT_MATCHING_ERROR":{
  			"Description":"",
  			"Links":"",
  			"Examples":""
  		}
  	},
  	"INVALID_REGISTER_ERROR": {
  		"NOT_REGISTER_ERROR" : {
  			"Description":"Register used is not recognized by the PLP.",
  			"Links":"http://progressive-learning-platform.github.io/instructions.html#registers-names-and-conventions",
  			"Examples":"BEFORE CORRECTION: addu $t1, $t2, $a4\nAFTER CORRECTION: addu $t1, $t2, $a3"
  		}
  	},
  	"INVALID_NUMBER_ERROR": {
  		"NOT_A_NUMBER_ERROR" : {
  			"Description":"Expected a number in the instruction. But found something else.",
  			"Links":"http://progressive-learning-platform.github.io/instructions.html",
  			"Examples":"BEFORE CORRECTION: addiu $t1, $t2, $t3\nAFTER CORRECTION: addiu $t1, $t2, 40\n\nBEFORE CORRECTION:li $a1, $t3\nAFTER CORRECTION: li $a1, 200"
  		}
  	}
  	
  },
  "DevicesandMemory" : {
	  "MainMemory": {
	    "start address": "0x10000000",
	    "size": "0x1000000",
	    "aligned": "false",
	    "description":"PLP general purpose memory module. PLP's RAM",
	    "GUI": "false",
	    "variable registers": "false"
	  },
	  "ROM": {
	    "start address": "0x0L",
	    "size": "0x800L",
	    "aligned": "false",
	    "description":"This is PLP's read only memory ROM",
	    "GUI": "false",
	    "variable registers": "false"
	  },
	  "LED Array": {
	    "start address": "0xf0200000",
	    "size": "0x1",
	    "aligned": "true",
	    "description":"Simulated LED array. Will light up proper LEDs when input data is written to its register. This module only has one register and the register address must be aligned.",
	    "GUI": "true",
	    "variable registers": "false"
	  },
	  "Switches": {
	    "start address": "0xf0100000",
	    "size": "0x1",
	    "aligned": "true",
	    "description":"Input switches. Action on the GUI frame will update the I/O register. This is a read-only register, writes issued to this module will have no effect and return a write error.",
	    "GUI": "true",
	    "variable registers": "false"
	  },
	  "FTracer": {
	    "start address": "0x0",
	    "size": "0xffffffff",
	    "aligned": "true",
	    "description":"Traces all bus activity to the console. This module requires the simulator to be reset to work properly.",
	    "GUI": "false",
	    "variable registers": "true"
	  },
	  "PLPID": {
	    "start address": "0xf0500000",
	    "size": "0x2",
	    "aligned": "true",
	    "description":"This module always returns the board ID and frequency when the first and second registers are read, respectively.",
	    "GUI": "true",
	    "variable registers": "false"
	  },
	  "Dummy Memory": {
	    "start address": "0x0L",
	    "size": "0x1",
	    "aligned": "true",
	    "description":"This module always returns zero, no init required.",
	    "GUI": "false",
	    "variable registers": "true"
	  },
	  "VGA": {
	    "start address": "0xf0400000",
	    "size": "0x2",
	    "aligned": "true",
	    "description":"640x480 VGA module. Consists of two registers, refer to the manual for usage.",
	    "GUI": "true",
	    "variable registers": "false"
	  },
	  "Timer": {
	    "start address": "0xf0600000",
	    "size": "0x1",
	    "aligned": "true",
	    "description":"Timer Module",
	    "GUI": "true",
	    "variable registers": "false"
	  },
	  "UART": {
	    "start address": "0xf0000000",
	    "size": "0x4",
	    "aligned": "true",
	    "description":"UART Module",
	    "GUI": "true",
	    "variable registers": "false"
	  },
	  "Seven Segment LEDs": {
	    "start address": "0xf0a00000",
	    "size": "0x1",
	    "aligned": "true",
	    "description":"Simulated seven segments LED.",
	    "GUI": "true",
	    "variable registers": "false"
	  },
	  "Interrupt Controller": {
	    "start address": "0xf0700000",
	    "size": "0x2",
	    "aligned": "true",
	    "description":"This module implements the PLP MIPS interrupt controller.",
	    "GUI": "false",
	    "variable registers": "false"
	  },
	  "Bus Monitor": {
	    "start address": "0x0L",
	    "size": "0x1",
	    "aligned": "true",
	    "description":"Monitors bus addresses and updates the timing diagram",
	    "GUI": "false",
	    "variable registers": "false"
	  },
	  "General Purpose IO": {
	    "start address": "0xf0300000",
	    "size": "0x3",
	    "aligned": "true",
	    "description":"2x8 bit GPIO with tristate register",
	    "GUI": "true",
	    "variable registers": "false"
  	}
  }

}
